---
title: "Paradata Statistics Report"
format:
  html:
    embed-resources: true
    page-layout: full
    toc: true
    toc-expand: 2
    toc-location: left
---

# LSMS Paradata Tools: Basic Multilevel Model


## Overview 

Often survey practitioners would like to understand how much do variation in interviewers contribute to the variation of interview length. One could ask the same thing about the variation in enumeration area. If an "interviewer effect is large" for a specific module, this could indicate that additional training may be needed for the module. An intercept-only multi-level model is used here to provide a preliminary ranking of interviewer effects. 

## Intercept-Only Multilevel Model 

We run a cross-cluster multilevel model with two-levels: at the enumeration area and interviewer. A household from an enumeration area is cross-assigned to an interviewer. This means that an area can have two different interviewers assigned to the area. The figure below provides an example of a cross assignment.

We first show an intercept-only multilevel model for a household module.  

$$ \ln(y_{hjk}) = \beta + u_j + u_k + e_{hjk} $$

where $y_{hjk}$ is the module duration of interest for household $h$ living in area $k$ and interviewer by interviewer $j$. The model includes two types of random effects: $u_j$ the interviewer random effect and $u_k$ the enumeration area random effect. Lastly, $e_{hjk}$ is the error term. We assume all random effects and the residual term are distributed normally and have a constant variance. We focus on log transformation of the interview length which worked better to fit the normality assumption on the residuals of the model. More specifically, $ u_j \sim N(0, \sigma_j^2) , u_k \sim N(0, \sigma_k^2), u_e \sim N(0, \sigma_e^2) $.

Multilevel models allow us to calculate the interclass correlation (ICC). The ICC describes how much of the variation in interview length is attributed to the grouping structure for the module: the same enumeration area group and the same interviewer group. One could also think of the ICC as the variance of the intercept, which in our case can be further decomposed into variation due to the enumeration area, the household, and the interviewer components. A large variance reflects a large variation in interview length while controlling for other factors. A large interviewer component for the ICC indicates that the distribution of interview slope across interviewers is quite spread out relative to other variance components. Thus, we use this measure to denote the interviewer effects.

$$ ICC_{interviewer} = \frac{\sigma_j^2}{\sigma_k^2 + \sigma_e^2 + \sigma_j^2} $$

For individual-level modules, we added a household random effect variable, $u_h$, where $u_h \sim N(0, \sigma_h^2)$. The interviewer ICC thus becomes: 

$$ ICC_{interviewer} = \frac{\sigma_j^2}{\sigma_h^2 + \sigma_k^2 + \sigma_e^2 + \sigma_j^2} $$


For more information on the model construction, please see _____ and _____ for reference. 

## Household Modules Results  

The table below shows the total variance (the demonimator of the ICC interviewer), the residual variance $\sigma_e^2$, and ICC interviewer. One can rank modules based on these numbers. 

```{r}
#| echo: false
#| output: false

library(dplyr)

# Directory of Dataset # 

setwd(here::here("data", "04_created")) 
data <- data.table::fread("data_hh_sections.csv") # Get clean data. 

section_list <- unique(data$section)

model_name  <-section_list
model_label <-section_list

#model_label  <- c("ind_available", "edu", "internal migration", "international migration", "livestock", "durables", 
#                   "mobile phones", "fin assets", "health", "employment", "ind land", "time use")

# Run for each module: unique(data$module)
for (x in 1:length(section_list)) {
  Model <- lme4::lmer(tot_minutes ~ 1 + (1|responsible)  + (1|area), REML=FALSE, data=data[section==section_list[x],])
  assign(model_name[x], Model)
}
rm(Model)

#-----------------------------------------------------------------
# Step 5: Saving important statistics and make accessible outputs 
#-----------------------------------------------------------------

stats_basic <- data.frame(c("area", "responsible", "residual", "area/total", "responsible/total"))

# Get statistics of remaining models.  

for (x in model_name) {
  var   <- data.frame(lme4::VarCorr(get(x)))
  icc   <- performance::icc(get(x), by_group = TRUE)
  aux   <- data.frame(mapply(c, var[c(1,4)], icc))
  stats_basic <- cbind(stats_basic, aux[2])
}
names(stats_basic) <- c("statistics", model_label)

#-----------------------------------------------------------------
# Step 6: Ready to Analyze Results 
#-----------------------------------------------------------------

# Reshape the data and make numeric. 

# For basic model
stats_basic2 <- setNames(data.frame(t(stats_basic[,-1])), stats_basic[,1])
stats_basic2 <- mutate_at(stats_basic2, 1:5, as.numeric)
stats_basic2["Sum of Variances"] <- stats_basic2["area"] + stats_basic2["responsible"] + stats_basic2["residual"] 
stats_basic2["ICC area"]  <- stats_basic2["area"]/(stats_basic2["responsible"] + stats_basic2["area"]) 
stats_basic2["ICC responsible"]  <- stats_basic2["responsible"]/(stats_basic2["responsible"] + stats_basic2["area"]) 

stats_basic2 <- mutate_if(stats_basic2, is.numeric, round, digits = 3)

```

```{r}
#| echo: false

reactable_theme <- reactable::reactableTheme(
  borderColor = "#dfe2e5",
  stripedColor = "#f6f8fa",
  highlightColor = "#B0D4F3",
  cellPadding = "8px 12px",
  style = list(
    fontFamily = "-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif"
  ),
  searchInputStyle = list(width = "100%")
)

stats_basic2 %>%
  reactable::reactable(
    defaultSorted = c("Sum of Variances"),
    defaultColDef = reactable::colDef(
      format = reactable::colFormat(digits = 2)
    ),
    columns = list(
      'total var' = reactable::colDef(
        name="total var", 
        cell =  reactablefmtr::data_bars(
          fill_color = "#FDB833", 
          stats_basic2, 
          text_position = "outside-base", 
          round_edges = TRUE,
          number_fmt = scales::number_format(accuracy = 0.1)
        ),
        defaultSortOrder = "desc"
      )), 
    searchable = TRUE,
    striped = TRUE,
    showSortable = TRUE,
    highlight = TRUE,
    bordered = TRUE,
    theme = reactable_theme
  )

```

## Individual Modules Results 
